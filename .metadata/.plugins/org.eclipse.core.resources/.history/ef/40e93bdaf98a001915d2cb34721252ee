package br.com.icarros.gilson.formulaone.entity;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import br.com.icarros.gilson.formulaone.utils.StringHelpders;

@Document(collection = "driver")
public class DriverDocument {
	
	@Id
	private String id;
	private String driverId = null;
	private String permanentNumber = null;
	private String code = null;
	private String url = null;
	private String givenName = null;
	private String familyName = null;
	private String dateOfBirth = null;
	private String nationality = null;
	
	public String getId() {
		return id;
	}
	public String getDriverId() {
		return driverId;
	}
	public String getPermanentNumber() {
		return permanentNumber;
	}
	public String getCode() {
		return code;
	}
	public String getUrl() {
		return url;
	}
	public String getGivenName() {
		return givenName;
	}
	public String getFamilyName() {
		return familyName;
	}
	public String getDateOfBirth() {
		return dateOfBirth;
	}
	public String getNationality() {
		return nationality;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((driverId == null) ? 0 : driverId.hashCode());
		return result;
	}
	
	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		DriverDocument other = (DriverDocument) obj;
		if (driverId == null) {
			if (other.driverId != null)
				return false;
		} else if (!driverId.equals(other.driverId))
			return false;
		return true;
	}
	
	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class DriverDocument {\n");

		sb.append("    driverId: ").append(StringHelpders.toIndentedString(driverId)).append("\n");
		sb.append("    permanentNumber: ").append(StringHelpders.toIndentedString(permanentNumber)).append("\n");
		sb.append("    code: ").append(StringHelpders.toIndentedString(code)).append("\n");
		sb.append("    url: ").append(StringHelpders.toIndentedString(url)).append("\n");
		sb.append("    givenName: ").append(StringHelpders.toIndentedString(givenName)).append("\n");
		sb.append("    familyName: ").append(StringHelpders.toIndentedString(familyName)).append("\n");
		sb.append("    dateOfBirth: ").append(StringHelpders.toIndentedString(dateOfBirth)).append("\n");
		sb.append("    nationality: ").append(StringHelpders.toIndentedString(nationality)).append("\n");
		sb.append("}");
		return sb.toString();
	}

}
