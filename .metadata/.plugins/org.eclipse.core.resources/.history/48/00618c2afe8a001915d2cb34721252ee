package br.com.icarros.gilson.formulaone.entity;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import br.com.icarros.gilson.formulaone.utils.StringHelpders;


@Document(collection="mr_data")
public class MRDataDocument {
	@Id
	private String id;
	private String xmlns;
	private String series;
	private String url;
	private String limit;
	private String offset;
	private String total;
	private RaceTableDocument raceTable;

	public String getId() {
		return id;
	}

	public String getXmlns() {
		return xmlns;
	}

	public String getSeries() {
		return series;
	}

	public String getUrl() {
		return url;
	}

	public String getLimit() {
		return limit;
	}

	public String getOffset() {
		return offset;
	}

	public String getTotal() {
		return total;
	}

	public RaceTableDocument getRaceTable() {
		return raceTable;
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		MRDataDocument other = (MRDataDocument) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class MRData {\n");

		sb.append("    xmlns: ").append(StringHelpders.toIndentedString(xmlns)).append("\n");
		sb.append("    series: ").append(StringHelpders.toIndentedString(series)).append("\n");
		sb.append("    url: ").append(StringHelpders.toIndentedString(url)).append("\n");
		sb.append("    limit: ").append(StringHelpders.toIndentedString(limit)).append("\n");
		sb.append("    offset: ").append(StringHelpders.toIndentedString(offset)).append("\n");
		sb.append("    total: ").append(StringHelpders.toIndentedString(total)).append("\n");
		sb.append("    raceTable: ").append(StringHelpders.toIndentedString(raceTable.toString())).append("\n");
		sb.append("}");
		return sb.toString();
	}
}
