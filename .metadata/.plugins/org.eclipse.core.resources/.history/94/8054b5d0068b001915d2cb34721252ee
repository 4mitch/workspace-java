package br.com.icarros.gilson.formulaone.entity;

import javax.validation.Valid;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;

import br.com.icarros.gilson.formulaone.model.TimeResult;
import br.com.icarros.gilson.formulaone.utils.StringHelpders;

@Document(collection = "time_result")
public class TimeResulDocument {

	@Id
	private String id;
	
	private String millis;
	private String timeRace;
	
	public TimeResulDocument() {
	}
	
	public TimeResulDocument(String millis, String timeRace) {
		this.millis = millis;
		this.timeRace = timeRace;
	}

	public String getId() {
		return id;
	}

	public String getMillis() {
		return millis;
	}
	public String getTimeRace() {
		return timeRace;
	}
	
	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((id == null) ? 0 : id.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TimeResulDocument other = (TimeResulDocument) obj;
		if (id == null) {
			if (other.id != null)
				return false;
		} else if (!id.equals(other.id))
			return false;
		return true;
	}

	@Override
	public String toString() {
		StringBuilder sb = new StringBuilder();
		sb.append("class TimeResulDocument {\n");

		sb.append("    millis: ").append(StringHelpders.toIndentedString(millis)).append("\n");
		sb.append("    timeRace: ").append(StringHelpders.toIndentedString(timeRace)).append("\n");
		sb.append("}");
		return sb.toString();
	}

	public static TimeResulDocument toTimeResult(TimeResult time) {
		try {
			String _millis = time.getMillis();
			String _timeRace = time.getTime();
			
			return new  TimeResulDocument(_millis, _timeRace);
		} catch (Exception e) {
			return null;
		}
	}

}
