package br.com.icarros.gilson.formulaone.model;

import java.util.Objects;

import javax.validation.Valid;

import org.springframework.validation.annotation.Validated;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModelProperty;

/**
 * Result
 */
@Validated
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2019-06-09T17:44:54.779Z")

public class Result2   {
  @JsonProperty("number")
  private String number = null;

  @JsonProperty("position")
  private String position = null;

  @JsonProperty("positionText")
  private String positionText = null;

  @JsonProperty("points")
  private String points = null;

  @JsonProperty("Driver")
  private Driver driver = null;

  @JsonProperty("Constructor")
  private Constructor constructor = null;

  @JsonProperty("grid")
  private String grid = null;

  @JsonProperty("laps")
  private String laps = null;

  @JsonProperty("status")
  private String status = null;

  @JsonProperty("Time")
  private TimeResult time = null;

  @JsonProperty("FastestLap")
  private FastestLap fastestLap = null;

  public Result2 number(String number) {
    this.number = number;
    return this;
  }

  /**
   * Get number
   * @return number
  **/
  @ApiModelProperty(example = "77", value = "")


  public String getNumber() {
    return number;
  }

  public void setNumber(String number) {
    this.number = number;
  }

  public Result2 position(String position) {
    this.position = position;
    return this;
  }

  /**
   * Get position
   * @return position
  **/
  @ApiModelProperty(example = "1", value = "")


  public String getPosition() {
    return position;
  }

  public void setPosition(String position) {
    this.position = position;
  }

  public Result2 positionText(String positionText) {
    this.positionText = positionText;
    return this;
  }

  /**
   * Get positionText
   * @return positionText
  **/
  @ApiModelProperty(example = "1", value = "")


  public String getPositionText() {
    return positionText;
  }

  public void setPositionText(String positionText) {
    this.positionText = positionText;
  }

  public Result2 points(String points) {
    this.points = points;
    return this;
  }

  /**
   * Get points
   * @return points
  **/
  @ApiModelProperty(example = "1", value = "")


  public String getPoints() {
    return points;
  }

  public void setPoints(String points) {
    this.points = points;
  }

  public Result2 driver(Driver driver) {
    this.driver = driver;
    return this;
  }

  /**
   * Get driver
   * @return driver
  **/
  @ApiModelProperty(value = "")

  @Valid

  public Driver getDriver() {
    return driver;
  }

  public void setDriver(Driver driver) {
    this.driver = driver;
  }

  public Result2 constructor(Constructor constructor) {
    this.constructor = constructor;
    return this;
  }

  /**
   * Get constructor
   * @return constructor
  **/
  @ApiModelProperty(value = "")

  @Valid

  public Constructor getConstructor() {
    return constructor;
  }

  public void setConstructor(Constructor constructor) {
    this.constructor = constructor;
  }

  public Result2 grid(String grid) {
    this.grid = grid;
    return this;
  }

  /**
   * Get grid
   * @return grid
  **/
  @ApiModelProperty(example = "1", value = "")


  public String getGrid() {
    return grid;
  }

  public void setGrid(String grid) {
    this.grid = grid;
  }

  public Result2 laps(String laps) {
    this.laps = laps;
    return this;
  }

  /**
   * Get laps
   * @return laps
  **/
  @ApiModelProperty(example = "55", value = "")


  public String getLaps() {
    return laps;
  }

  public void setLaps(String laps) {
    this.laps = laps;
  }

  public Result2 status(String status) {
    this.status = status;
    return this;
  }

  /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(example = "55", value = "")


  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public Result2 time(TimeResult time) {
    this.time = time;
    return this;
  }

  /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(value = "")

  @Valid

  public TimeResult getTime() {
    return time;
  }

  public void setTime(TimeResult time) {
    this.time = time;
  }

  public Result2 fastestLap(FastestLap fastestLap) {
    this.fastestLap = fastestLap;
    return this;
  }

  /**
   * Get fastestLap
   * @return fastestLap
  **/
  @ApiModelProperty(value = "")

  @Valid

  public FastestLap getFastestLap() {
    return fastestLap;
  }

  public void setFastestLap(FastestLap fastestLap) {
    this.fastestLap = fastestLap;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Result2 result = (Result2) o;
    return Objects.equals(this.number, result.number) &&
        Objects.equals(this.position, result.position) &&
        Objects.equals(this.positionText, result.positionText) &&
        Objects.equals(this.points, result.points) &&
        Objects.equals(this.driver, result.driver) &&
        Objects.equals(this.constructor, result.constructor) &&
        Objects.equals(this.grid, result.grid) &&
        Objects.equals(this.laps, result.laps) &&
        Objects.equals(this.status, result.status) &&
        Objects.equals(this.time, result.time) &&
        Objects.equals(this.fastestLap, result.fastestLap);
  }

  @Override
  public int hashCode() {
    return Objects.hash(number, position, positionText, points, driver, constructor, grid, laps, status, time, fastestLap);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Result {\n");
    
    sb.append("    number: ").append(toIndentedString(number)).append("\n");
    sb.append("    position: ").append(toIndentedString(position)).append("\n");
    sb.append("    positionText: ").append(toIndentedString(positionText)).append("\n");
    sb.append("    points: ").append(toIndentedString(points)).append("\n");
    sb.append("    driver: ").append(toIndentedString(driver)).append("\n");
    sb.append("    constructor: ").append(toIndentedString(constructor)).append("\n");
    sb.append("    grid: ").append(toIndentedString(grid)).append("\n");
    sb.append("    laps: ").append(toIndentedString(laps)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    fastestLap: ").append(toIndentedString(fastestLap)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

